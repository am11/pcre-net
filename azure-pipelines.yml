
jobs:
  - job: Linux
    pool:
      vmImage: ubuntu-16.04
    steps:
      - bash: |
          mkdir src/cmake-x64
        displayName: Init
      - task: CMake@1
        displayName: CMake x64
        inputs:
          workingDirectory: src/cmake-x64
          cmakeArgs: .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=gcc-7 -DCMAKE_CXX_COMPILER=g++-7
      - bash: |
          cd $(Build.SourcesDirectory)/src/cmake-x64
          make
        displayName: Build Native x64
      - bash: |
          cd $(Build.SourcesDirectory)
          cp src/cmake-x64/PCRE.NET.Native.so $(Build.ArtifactStagingDirectory)/PCRE.NET.Native.x64.so
          mkdir lib
          cp src/cmake-x64/PCRE.NET.Native.so lib/PCRE.NET.Native.x64.so
        displayName: Copy Artifacts
      - task: DotNetCoreCLI@2
        displayName: Test x64
        inputs:
          configuration: Release
          command: test
          projects: src/PCRE.NET.Tests/PCRE.NET.Tests.csproj
          arguments: /v:m /m /p:LinuxBuild=true /p:ExpectPlatform=x64 --framework netcoreapp2.1
      - task: PublishPipelineArtifact@0
        displayName: Publish Artifacts
        inputs:
          artifactName: linux
          targetPath: $(Build.ArtifactStagingDirectory)

  - job: MacOS
    pool:
      vmImage: macos-10.13
    steps:
      - bash: |
          mkdir src/cmake-x64
        displayName: Init
      - task: CMake@1
        displayName: CMake x64
        inputs:
          workingDirectory: src/cmake-x64
          cmakeArgs: .. -DCMAKE_BUILD_TYPE=Release
      - bash: |
          cd $(Build.SourcesDirectory)/src/cmake-x64
          make
        displayName: Build Native x64
      - bash: |
          cd $(Build.SourcesDirectory)
          cp src/cmake-x64/PCRE.NET.Native.dylib $(Build.ArtifactStagingDirectory)/PCRE.NET.Native.x64.dylib
          mkdir lib
          cp src/cmake-x64/PCRE.NET.Native.dylib lib/PCRE.NET.Native.x64.dylib
        displayName: Copy Artifacts
      - task: DotNetCoreCLI@2
        displayName: Test x64
        inputs:
          configuration: Release
          command: test
          projects: src/PCRE.NET.Tests/PCRE.NET.Tests.csproj
          arguments: /v:m /m /p:LinuxBuild=true /p:ExpectPlatform=x64 --framework netcoreapp2.1
      - task: PublishPipelineArtifact@0
        displayName: Publish Artifacts
        inputs:
          artifactName: osx
          targetPath: $(Build.ArtifactStagingDirectory)

  - job: Windows
    pool:
      vmImage: vs2017-win2016
    dependsOn:
      - Linux
      - MacOS
    steps:
      - script: |
          mkdir lib
        displayName: Init
      - task: DownloadPipelineArtifact@0
        displayName: Download Linux Artifacts
        inputs:
          artifactName: linux
          targetPath: lib
      - task: DownloadPipelineArtifact@0
        displayName: Download MacOS Artifacts
        inputs:
          artifactName: osx
          targetPath: lib
      - task: MSBuild@1
        displayName: NuGet Restore
        inputs:
          configuration: Release
          maximumCpuCount: true
          msbuildArguments: /t:Restore /v:m
          solution: src/PCRE.NET.sln
      - task: MSBuild@1
        displayName: Build Native x86
        inputs:
          configuration: Release
          platform: Win32
          maximumCpuCount: true
          msbuildArguments: /v:m
          solution: src/PCRE.NET.Native/PCRE.NET.Native.vcxproj
      - task: MSBuild@1
        displayName: Build Native x64
        inputs:
          configuration: Release
          platform: x64
          maximumCpuCount: true
          msbuildArguments: /v:m
          solution: src/PCRE.NET.Native/PCRE.NET.Native.vcxproj
      - task: MSBuild@1
        displayName: Build PCRE.NET
        inputs:
          configuration: Release
          maximumCpuCount: true
          msbuildArguments: /v:m
          solution: src/PCRE.NET/PCRE.NET.csproj
      - task: MSBuild@1
        displayName: NuGet Pack
        inputs:
          configuration: Release
          maximumCpuCount: true
          msbuildArguments: /t:Pack /v:m /p:RequirePcreNative=true /p:PackageOutputPath=$(Build.ArtifactStagingDirectory)
          solution: src/PCRE.NET/PCRE.NET.csproj
      - task: MSBuild@1
        displayName: Build Tests x86
        inputs:
          configuration: Release
          maximumCpuCount: true
          platform: x86
          msbuildArguments: /v:m /p:ExpectPlatform=x86
          solution: src/PCRE.NET.Tests/PCRE.NET.Tests.csproj
      - task: MSBuild@1
        displayName: Build Tests x64
        inputs:
          configuration: Release
          maximumCpuCount: true
          platform: x64
          msbuildArguments: /v:m /p:ExpectPlatform=x64
          solution: src/PCRE.NET.Tests/PCRE.NET.Tests.csproj
      - task: VSTest@2
        displayName: Test x86
        inputs:
          configuration: Release
          platform: x86
          searchFolder: src/PCRE.NET.Tests/bin/x86/Release/net472
      - task: VSTest@2
        displayName: Test x64
        inputs:
          configuration: Release
          platform: x64
          searchFolder: src/PCRE.NET.Tests/bin/x64/Release/net472
      - task: PublishBuildArtifacts@1
        displayName: Publish Artifacts
        inputs:
          ArtifactName: NuGet
